import asyncio
import decimal
import sqlite3 as sq

from decimal import Decimal
from database import db, cur, balance, register, block
from config import access_token
from aiogram.types import Message
from aiogram import Bot, Dispatcher, F
from keyboard import menu_keyboard, games_keyboard, coinflip_keyboard
from random import randint

bot = Bot(token=access_token)
dp = Dispatcher()


@dp.message(F.text == "/start")
async def sender(message: Message):
    try:
        cur.execute(f"INSERT INTO users (user_id) VALUES ({message.from_user.id})")
        db.commit()
        await message.answer("""‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å!

–ü–æ—á–µ–º—É –∏–º–µ–Ω–Ω–æ AMG4GAMES?

- –ú–æ–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π –±–æ–Ω—É—Å –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é 50‚ÇΩ
- –ë—ã—Å—Ç—Ä—ã–µ –≤—ã–ø–ª–∞—Ç—ã
- –í—ã—Å–æ–∫–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç –≤—ã–π–≥—Ä—ã—à–∞
- –ü–æ–ª–Ω–∞—è –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å –¥–ª—è –¥—Ä—É–≥–∏—Ö –∏–≥—Ä–æ–∫–æ–≤
- –†–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ –∏–≥—Ä–æ–≤—ã—Ö —Ä–µ–∂–∏–º–æ–≤

–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ - /help""", reply_markup=menu_keyboard)
    except sq.IntegrityError:
        await message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=menu_keyboard)


@dp.message(F.text == "/games")
@dp.message(F.text == "–í—ã–±—Ä–∞—Ç—å –∏–≥—Ä—É üé∞")
async def sender(message: Message):
    if register(message.from_user.id):
        cur.execute("UPDATE users SET block = 'games'")
        db.commit()
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É: ", reply_markup=games_keyboard)
    else:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ /start —á—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è")


@dp.message(F.text == "/coinflip")
@dp.message(F.text == "CoinFlip ü™ô")
async def sender(message: Message):
    if register(message.from_user.id):
        cur.execute("UPDATE users SET block = 'coinflip'")
        db.commit()
        await message.answer("–û—Ä–µ–ª/–†–µ—à–∫–∞:", reply_markup=coinflip_keyboard)
    else:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ /start —á—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è")


@dp.message(F.text == "–û—Ä–µ–ª")
@dp.message(F.text == "–†–µ—à–∫–∞")
async def sender(message: Message):
    if register(message.from_user.id):
        if block(message.from_user.id) in ["coinflip", "cf_bet1", "cf_bet2"]:
            if message.text == "–û—Ä–µ–ª":
                cur.execute("UPDATE users SET block = 'cf_bet1'")
            else:
                cur.execute("UPDATE users SET block = 'cf_bet2'")
            db.commit()
            await message.answer(f"""–í–∞—à –±–∞–ª–∞–Ω—Å: {balance(message.from_user.id)}‚ÇΩ
–°—Ç–∞–≤–∫–∞: {message.text}
            
–°–¥–µ–ª–∞–π—Ç–µ —Å—Ç–∞–≤–∫—É:""")
        else:
            await message.answer("""–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏

–ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ /start —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é""")
    else:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ /start —á—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è")


@dp.message(F.text == "–ù–∞–∑–∞–¥")
async def sender(message: Message):
    if register(message.from_user.id):
        if block(message.from_user.id) in ["coinflip", "cf_bet1", "cf_bet2"]:
            cur.execute("UPDATE users SET block = 'games'")
            await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É:", reply_markup=games_keyboard)
        elif block(message.from_user.id) == "games":
            cur.execute("UPDATE users SET block = 'main'")
            await message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=menu_keyboard)
        db.commit()


@dp.message(F.text == "/balance")
@dp.message(F.text == "–ë–∞–ª–∞–Ω—Å üí∞")
async def sender(message: Message):
    if register(message.from_user.id):
        await message.answer(f"–í–∞—à –±–∞–ª–∞–Ω—Å: {balance(message.from_user.id)}‚ÇΩ")
    else:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ /start —á—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è")


@dp.message(F.text)
async def sender(message: Message):
    try:
        bet = Decimal(message.text).quantize(Decimal("1.00"))
        rand = randint(1, 2)
        if register(message.from_user.id):
            if block(message.from_user.id) in ["cf_bet1", "cf_bet2"]:
                if bet <= balance(message.from_user.id):
                    if rand == 1:
                        if block(message.from_user.id) == "cf_bet1":
                            cur.execute(f"UPDATE users SET balance = {balance(message.from_user.id) + bet}")
                            await message.answer(f"–û—Ä–µ–ª, –í—ã –≤—ã–π–≥—Ä–∞–ª–∏ –í–∞—à –±–∞–ª–∞–Ω—Å: {balance(message.from_user.id)}‚ÇΩ")
                        elif block(message.from_user.id) == "cf_bet2":
                            cur.execute(f"UPDATE users SET balance = {balance(message.from_user.id) - bet}")
                            await message.answer(f"–û—Ä–µ–ª, –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ –í–∞—à –±–∞–ª–∞–Ω—Å: {balance(message.from_user.id)}‚ÇΩ")
                    else:
                        if block(message.from_user.id) == "cf_bet1":
                            cur.execute(f"UPDATE users SET balance = {balance(message.from_user.id) - bet}")
                            await message.answer(f"–†–µ—à–∫–∞, –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ –í–∞—à –±–∞–ª–∞–Ω—Å: {balance(message.from_user.id)}‚ÇΩ")
                        elif block(message.from_user.id) == "cf_bet2":
                            cur.execute(f"UPDATE users SET balance = {balance(message.from_user.id) + bet}")
                            await message.answer(f"–†–µ—à–∫–∞, –í—ã –≤—ã–π–≥—Ä–∞–ª–∏ –í–∞—à –±–∞–ª–∞–Ω—Å: {balance(message.from_user.id)}‚ÇΩ")
                    db.commit()
                else:
                    await message.answer("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤")
    except ValueError:
        await message.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—É–º–º–∞")
    except decimal.InvalidOperation:
        await message.answer("""–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏

–ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ /start —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é""")



@dp.message(F.text == "/help")
async def sender(message: Message):
    if register(message.from_user.id):
        await message.answer("""–ö–æ–º–∞–Ω–¥—ã –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞:
/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/balance - –ë–∞–ª–∞–Ω—Å
/games - –í—ã–±—Ä–∞—Ç—å –∏–≥—Ä—É
/coinflip - CoinFlip
/dice - Dice""")
    else:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ /start —á—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è")


@dp.message()
async def sender(message: Message):
    if register(message.from_user.id):
        await message.answer("""–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏

–ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ /start —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é""")
    else:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ /start —á—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è")


async def main():
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
